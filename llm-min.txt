# IntegratedKnowledgeManifest_SKF/1.4 LA
# SourceDocs: ["/home/emilstenstrom/Projects/mybgg/scripts/mybgg/models.py", "/home/emilstenstrom/Projects/mybgg/scripts/mybgg/bgg_client.py", "/home/emilstenstrom/Projects/mybgg/scripts/mybgg/downloader.py", "/home/emilstenstrom/Projects/mybgg/scripts/mybgg/indexer.py", "/home/emilstenstrom/Projects/mybgg/scripts/download_and_index.py", "/home/emilstenstrom/Projects/mybgg/index.html", "/home/emilstenstrom/Projects/mybgg/app.js", "/home/emilstenstrom/Projects/mybgg/scripts/requirements.txt", "/home/emilstenstrom/Projects/mybgg/style.css"]
# GenerationTimestamp: 2025-06-01T12:00:00Z
# PrimaryNamespace: mybgg

# SECTION: DEFINITIONS (Prefix: D)
# Format_PrimaryDef: Dxxx:Gxxx_Entity [DEF_TYP] [NAMESPACE "relative.path"] [OPERATIONS {op1:RetT(p1N:p1T)}] [ATTRIBUTES {attr1:AttrT1}] ("Note")
# ---
D001:G001_BoardGame [CompDef] [NAMESPACE ".models"] [OPERATIONS {__init__:None(self:G001_BoardGame,game_data:Dict,image:Str,tags:List,numplays:Int,previous_players:List,expansions:List);calc_weight:Str(self:G001_BoardGame,game_data:Dict);calc_num_players:List(self:G001_BoardGame,game_data:Dict,expansions:List);calc_playing_time:Str(self:G001_BoardGame,game_data:Dict);calc_min_age:Int(self:G001_BoardGame,game_data:Dict);calc_rank:Decimal(self:G001_BoardGame,game_data:Dict);calc_usersrated:Decimal(self:G001_BoardGame,game_data:Dict);calc_numowned:Decimal(self:G001_BoardGame,game_data:Dict);calc_rating:Decimal(self:G001_BoardGame,game_data:Dict)}] [ATTRIBUTES {id:Int;name:Str;description:Str;categories:List;mechanics:List;players:List;weight:Str;playing_time:Str;min_age:Int;rank:Decimal;usersrated:Decimal;numowned:Decimal;rating:Decimal;numplays:Int;image:Str;tags:List;previous_players:List;expansions:List}] ("Represents a board game with its associated data.")
D002:G002_BGGClient [CompDef] [NAMESPACE ".bgg_client"] [OPERATIONS {__init__:None(self:G002_BGGClient,cache:Any,debug:Bool);collection:List(self:G002_BGGClient,user_name:Str);plays:List(self:G002_BGGClient,user_name:Str);game_list:List(self:G002_BGGClient,game_ids:List);_make_request:Str(self:G002_BGGClient,url:Str,params:Dict,tries:Int);_collection_to_games:List(self:G002_BGGClient,data:Str);_games_list_to_games:List(self:G002_BGGClient,data:Str);_plays_to_games:List(self:G002_BGGClient,data:Str)}] [ATTRIBUTES {BASE_URL:Str;requester:Any}] ("Client for interacting with the BoardGameGeek XML API 2.")
D003:G003_CacheBackendSqlite [CompDef] [NAMESPACE ".bgg_client"] [OPERATIONS {__init__:None(self:G003_CacheBackendSqlite,path:Str,ttl:Int)}] [ATTRIBUTES {cache:Any}] ("SQLite backend for caching BGG API requests.")
D004:G004_Downloader [CompDef] [NAMESPACE ".downloader"] [OPERATIONS {__init__:None(self:G004_Downloader,project_name:Str,cache_bgg:Bool,debug:Bool);collection:List(self:G004_Downloader,user_name:Str,extra_params:Dict)}] [ATTRIBUTES {client:G002_BGGClient}] ("Downloads board game collection and play data from BGG.")
D005:G005_Indexer [CompDef] [NAMESPACE ".indexer"] [OPERATIONS {__init__:None(self:G005_Indexer,app_id:Str,apikey:Str,index_name:Str,hits_per_page:Int);add_objects:None(self:G005_Indexer,collection:List);delete_objects_not_in:None(self:G005_Indexer,collection:List);_prepare_description:Str(self:G005_Indexer,description:Str);fetch_image:Bytes(self:G005_Indexer,url:Str,tries:Int)}] [ATTRIBUTES {index:Any}] ("Indexes board game data into Algolia.")
D006:G006_main_script_func [FuncDef] [NAMESPACE ""] [OPERATIONS {main:None(args:Any)}] [] ("Main function in download_and_index.py to orchestrate downloading and indexing.")
D007:G007_BGGException [ExcDef] [NAMESPACE ".bgg_client"] [] [] ("Custom exception for BGG client errors.")
D008:G008_IndexHTML [StaticAsset] [NAMESPACE "/"] [ATTRIBUTES {title:Str;scripts:List;stylesheets:List}] ("Main HTML page for the application, sets up the structure and includes necessary JS/CSS.")
D009:G009_AppJS [ClientScript] [NAMESPACE "/"] [OPERATIONS {loadJSON:None(path:Str,callback:Func);on_render:None();get_widgets:Dict(SETTINGS:Dict);init:None(SETTINGS:Dict)}] [ATTRIBUTES {}] ("Core JavaScript application logic, handles UI rendering, Algolia InstantSearch setup, and event handling.")
D010:G010_RequirementsTXT [DependencyManifest] [NAMESPACE "/scripts"] [ATTRIBUTES {packages:List}] ("Lists Python package dependencies for the backend, e.g., algoliasearch, requests-cache, colorgram.py, declxml.")
D011:G011_StyleCSS [StylesheetAsset] [NAMESPACE "/"] [ATTRIBUTES {selectors:List}] ("Defines the visual styling for index.html, including layout, typography, and component appearance.")
# ---

# SECTION: INTERACTIONS (Prefix: I)
# Format: Ixxx:Source_Ref INT_VERB Target_Ref_Or_Literal ("Note_Conditions_Error(Gxxx_ErrorType)")
# ---
I001:G004_Downloader.__init__ INSTANTIATES G002_BGGClient ("Downloader creates a BGGClient instance.")
I002:G004_Downloader.collection CALLS_METHOD G002_BGGClient.collection ("Downloader fetches collection via BGGClient.")
I003:G004_Downloader.collection CALLS_METHOD G002_BGGClient.plays ("Downloader fetches plays via BGGClient.")
I004:G004_Downloader.collection CALLS_METHOD G002_BGGClient.game_list ("Downloader fetches game details via BGGClient.")
I005:G004_Downloader.collection INSTANTIATES G001_BoardGame ("Downloader creates BoardGame objects from fetched data.")
I006:G006_main_script_func.main READS_CONFIG "config.json" ("Main script reads configuration.")
I007:G006_main_script_func.main INSTANTIATES G004_Downloader ("Main script creates a Downloader instance.")
I008:G006_main_script_func.main CALLS_METHOD G004_Downloader.collection ("Main script calls Downloader to get game collection.")
I009:G006_main_script_func.main INSTANTIATES G005_Indexer ("Main script creates an Indexer instance if indexing is enabled.")
I010:G006_main_script_func.main CALLS_METHOD G005_Indexer.add_objects ("Main script calls Indexer to add objects to Algolia.")
I011:G006_main_script_func.main CALLS_METHOD G005_Indexer.delete_objects_not_in ("Main script calls Indexer to remove old objects from Algolia.")
I012:G002_BGGClient.__init__ USES G003_CacheBackendSqlite ("BGGClient can use CacheBackendSqlite if cache is provided.")
I013:G002_BGGClient._make_request RAISES G007_BGGException ("On API errors or max retries reached.")
I014:G001_BoardGame.__init__ CALLS_METHOD G001_BoardGame.calc_num_players ("To determine player counts including expansions.")
I015:G001_BoardGame.__init__ CALLS_METHOD G001_BBoardGame.calc_weight ("To categorize game weight.")
I016:G001_BBoardGame.__init__ CALLS_METHOD G001_BBoardGame.calc_playing_time ("To categorize playing time.")
I017:G001_BBoardGame.__init__ CALLS_METHOD G001_BBoardGame.calc_min_age ("To determine minimum player age.")
I018:G001_BBoardGame.__init__ CALLS_METHOD G001_BBoardGame.calc_rank ("To get the game rank.")
I019:G001_BBoardGame.__init__ CALLS_METHOD G001_BBoardGame.calc_usersrated ("To get the number of users rated.")
I020:G001_BBoardGame.__init__ CALLS_METHOD G001_BBoardGame.calc_numowned ("To get the number of users owning the game.")
I021:G001_BBoardGame.__init__ CALLS_METHOD G001_BBoardGame.calc_rating ("To get the average rating.")
I022:G005_Indexer.add_objects CALLS_METHOD G005_Indexer.fetch_image ("To get image data for color extraction.")
I023:G005_Indexer.add_objects CALLS_METHOD G005_Indexer._prepare_description ("To truncate and clean description text.")
I024:G008_IndexHTML LOADS_SCRIPT "app.js" ("index.html includes and executes app.js.")
I025:G008_IndexHTML LOADS_LIBRARY "algoliasearch-lite.umd.js" ("index.html includes Algolia search client library.")
I026:G008_IndexHTML LOADS_LIBRARY "instantsearch.production.min.js" ("index.html includes Algolia InstantSearch library.")
I027:G009_AppJS.loadJSON FETCHES_CONFIG "config.json" ("app.js loads configuration settings asynchronously.")
I028:G009_AppJS.init CALLS_METHOD G009_AppJS.get_widgets ("Initializes UI widgets based on settings.")
I029:G009_AppJS.init USES_LIBRARY "instantsearch" ("app.js uses Algolia InstantSearch to power the search interface.")
I030:G009_AppJS.on_render MANIPULATES_DOM ".ais-Hits-item" ("Modifies hit items, e.g., setting background color.")
I031:G008_IndexHTML USES_STYLESHEET G011_StyleCSS ("index.html links to style.css for its visual presentation.")
I032:G006_main_script_func RELIES_ON G010_RequirementsTXT ("The Python backend scripts require packages listed in requirements.txt to function.")
# ---

# SECTION: USAGE_PATTERNS (Prefix: U)
# Format: U_Name:PatternTitleKeyword
#         U_Name.N:[Actor_Or_Ref] ACTION_KEYWORD (Target_Or_Data_Involving_Ref) -> [Result_Or_State_Change_Involving_Ref]
# ---
U_FullProcess:Download and Index Board Game Collection
U_FullProcess.1:[User/Script] EXECUTE_SCRIPT (download_and_index.py with args) -> [ScriptExecution]
U_FullProcess.2:[G006_main_script_func.main] READ_FILE ("config.json") -> [ConfigData]
U_FullProcess.3:[G006_main_script_func.main] INITIALIZE (G004_Downloader with ConfigData.project_name, args.cache_bgg, args.debug) -> [downloader_instance]
U_FullProcess.4:[downloader_instance] EXECUTE_DOWNLOAD (ConfigData.boardgamegeek.user_name, ConfigData.boardgamegeek.extra_params) -> [boardgame_collection_list]
U_FullProcess.5:[G006_main_script_func.main] CHECK_CONDITION (args.no_indexing is False) -> [ShouldIndexGames]
U_FullProcess.6:[G006_main_script_func.main IF ShouldIndexGames] INITIALIZE (G005_Indexer with ConfigData.algolia.app_id, args.apikey, ConfigData.algolia.index_name, ConfigData.algolia.hits_per_page) -> [indexer_instance]
U_FullProcess.7:[indexer_instance IF ShouldIndexGames] INDEX_DATA (boardgame_collection_list) -> [AlgoliaIndexUpdated]
U_FullProcess.8:[indexer_instance IF ShouldIndexGames] CLEANUP_INDEX (boardgame_collection_list) -> [OldAlgoliaDataRemoved]

U_FrontendLoad:User Views Board Game Collection Frontend
U_FrontendLoad.1:[User] NAVIGATES_TO "/index.html" -> [PageRequest]
U_FrontendLoad.2:[WebServer] SERVES_FILE "/index.html" -> [HTMLResponse]
U_FrontendLoad.3:[G008_IndexHTML] RENDERS_PAGE_STRUCTURE () -> [BasicPageLayout]
U_FrontendLoad.4:[G008_IndexHTML] EXECUTES_SCRIPT ("app.js") -> [G009_AppJS_Execution]
U_FrontendLoad.5:[G009_AppJS_Execution] FETCH_DATA ("config.json" via G009_AppJS.loadJSON) -> [FrontendSettings]
U_FrontendLoad.6:[G009_AppJS_Execution] INITIALIZE_SEARCH (FrontendSettings via G009_AppJS.init) -> [SearchInterfaceReady]
U_FrontendLoad.7:[G009_AppJS_Execution] RENDERS_WIDGETS (via G009_AppJS.on_render and Algolia) -> [InteractiveSearchPage]
# ---
# END_OF_MANIFEST
